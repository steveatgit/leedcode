Find the contiguous subarray within an array (containing at least one number) which has the largest sum.

For example, given the array [-2,1,-3,4,-1,2,1,-5,4],
the contiguous subarray [4,-1,2,1] has the largest sum = 6.


class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int tempResult = 0, ret = 0;
        int biggest = INT_MIN;
        int start = 0, end = 0;
        for(int i=0;i<nums.size();i++) {
            if(tempResult<0) {
                tempResult = nums[i];
                start = i;
            } else {
                tempResult += nums[i];
            }
            if (tempResult > ret) {
                ret = tempResult;
                end = i;
            }
            if(biggest < nums[i]) {
                biggest = nums[i];
            }
        }
        if(biggest < 0) {
            return biggest;
        } else {
            return ret;
        }
    }
};
