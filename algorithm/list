wqu-m01:code wqu$ ./a.out 
1 2 3 4 5 
1 2 3 4 6 5 
1 3 4 6 5 
wqu-m01:code wqu$ !c
cat test.cpp 
#include <iostream>  
using namespace std;  

struct List
{
	List *next;
	int data;
};
List *createList(int arr[], int n)
{
	if (n <= 0 || NULL == arr) {
		return NULL;
	}
	List *head = NULL;
	List *tail = NULL;
	for (int i = 0; i < n; i++) {
		List* pNode = new List();
		pNode->next = NULL;
		pNode->data = arr[i];
		if (head == NULL) {
			tail = pNode;
			head = pNode;
		}
		else {
			tail->next = pNode;
			tail = tail->next;
		}
	}
	return head;
}

List *insertList(List *head, int n, int data)
{
	if(NULL == head || n<0) {
		return NULL;
	}
	List *pNode = new List();
	pNode->data = data;
	List *curr = head;
	while(curr && n>0) {
		curr = curr->next;
		n--;
	}
	if(curr == NULL) {
		return NULL;
	}
	List *pNext = curr->next;
	curr->next = pNode;
	pNode->next = pNext;
	return head;
}
List *deleteList(List* head, int data)
{
	if(NULL == head) {
		return NULL;
	}
	List *curr = head;
	while(curr->next) {
		if(curr->next->data == data) {
			curr->next = curr->next->next;
			return head;
		}
		curr = curr->next;
	}
	return NULL;
}
void printList(List *head)
{
	if(head == NULL) {
		return;
	}
	while(head) {
		cout<<head->data<<' ';
		head = head->next;
	}
	cout<<endl;
}
int main()
{
	int a[5] = {1,2,3,4,5};
	List *head = createList(a, 5);
	printList(head);
	head = insertList(head, 3, 6);
	printList(head);
	head = deleteList(head, 2);
	printList(head);
}
